{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/questions.js","components/Questions/CreateQues.js","components/Questions/IndexQues.js","components/Questions/IndexAllQues.js","components/Questions/ShowQues.js","components/Questions/UpdateQues.js","components/Answers/CreateAns.js","api/answers.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","exact","unauthenticatedOptions","alwaysOptions","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showQues","CreateQues","handleSubmit","question","title","topic","description","season","episode","createQues","as","rows","IndexQues","questions","indexQues","console","log","quesJSX","length","map","ques","_id","IndexAllQues","indexAllQues","ShowQues","handleDelete","match","deleteQues","params","owner","onClick","UpdateQues","updateQues","date","CreateAns","answer","text","questionId","createAns","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cea9cb3b.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/create-question' className='nav-link'>Ask a ?uestion</NavLink>\n    <NavLink to='/questions' className='nav-link'>My ?uestions</NavLink>\n    <NavLink exact to='/all' className='nav-link'>All ?uestions</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>?UESTION EVERYTHING</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://whispering-stream-83145.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createQues = (data, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/questions/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      question: {\n        title: data.title,\n        topic: data.topic,\n        description: data.description,\n        season: data.season,\n        episode: data.episode\n      }\n    }\n  })\n}\n\nexport const indexQues = (user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/questions',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const indexAllQues = (user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/all',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showQues = (id, user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/questions/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateQues = (id, data, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/questions/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      question: {\n        title: data.title,\n        topic: data.topic,\n        description: data.description,\n        season: data.season,\n        episode: data.episode\n      }\n    }\n  })\n}\n\nexport const deleteQues = (id, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/questions/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createQues } from '../../api/questions'\n\nclass CreateQues extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      topic: '',\n      description: '',\n      season: '',\n      episode: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history } = this.props\n\n    createQues(this.state, user)\n      .then(() => history.push('/questions/'))\n      .then(() => {\n        msgAlert({\n          heading: 'Question Posted!',\n          message: 'Now, just wait on someone to answer.',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Error Posting Question!',\n          message: 'Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <div className='box'>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId='title'>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='title'\n              value={this.state.title}\n              placeholder='Anime Title'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='topic'>\n            <Form.Label>Topic</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='topic'\n              value={this.state.topic}\n              placeholder='Question Topic'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              required\n              as='textarea'\n              rows={4}\n              name='description'\n              value={this.state.description}\n              placeholder='Expand on your question'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='season'>\n            <Form.Label>Season</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='season'\n              value={this.state.season}\n              placeholder='What season are you up to?'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='episode'>\n            <Form.Label>Episode</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='episode'\n              value={this.state.episode}\n              placeholder='What episode are you up to?'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button className='createBtn' type='submit'>\n            Post\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CreateQues)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { indexQues } from '../../api/questions'\n\nclass IndexQues extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      questions: []\n    }\n  }\n\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n\n    indexQues(user)\n      .then((res) => {\n        console.log(res.data)\n        return res\n      })\n      .then((res) => this.setState({ questions: res.data.questions }))\n      .then(() => {\n        msgAlert({\n          heading: 'Index success',\n          message: 'Showing all your questions',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Index fail',\n          message: 'Index error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { questions } = this.state\n\n    if (questions === null) {\n      return 'Loading...'\n    }\n\n    let quesJSX\n    if (questions.length === 0) {\n      quesJSX = 'You have not asked any questions. Try asking one!'\n    } else {\n      quesJSX = questions.map((ques) => (\n        <li key={ques._id}>\n          <Link to={`/questions/${ques._id}`}>\n            <h3>{ques.title}: Season:{ques.season} Episode:{ques.episode}</h3>\n          </Link>\n          <h4>{ques.topic}</h4>\n          <p>{ques.description}</p>\n          <hr/>\n        </li>\n      ))\n    }\n\n    return (\n      <>\n        <h3>Your Questions:</h3>\n        <ul>\n          {quesJSX}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default IndexQues\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { indexAllQues } from '../../api/questions'\n\nclass IndexAllQues extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      questions: []\n    }\n  }\n\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n\n    indexAllQues(user)\n      .then((res) => {\n        console.log(res.data)\n        return res\n      })\n      .then((res) => this.setState({ questions: res.data.questions }))\n      .then(() => {\n        msgAlert({\n          heading: 'Index success',\n          message: 'Showing all your questions',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Index fail',\n          message: 'Index error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { questions } = this.state\n\n    if (questions === null) {\n      return 'Loading...'\n    }\n\n    let quesJSX\n    if (questions.length === 0) {\n      quesJSX = 'You have not asked any questions. Try asking one!'\n    } else {\n      quesJSX = questions.map((ques) => (\n        <li key={ques._id}>\n          <Link to={`/questions/${ques._id}`}>\n            <h3>{ques.title}: Season:{ques.season} Episode:{ques.episode}</h3>\n          </Link>\n          <h4>{ques.topic}</h4>\n          <p>{ques.description}</p>\n          <hr/>\n        </li>\n      ))\n    }\n\n    return (\n      <>\n        <h3>Questions:</h3>\n        <ul>\n          {quesJSX}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default IndexAllQues\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { showQues, deleteQues } from '../../api/questions'\nimport Button from 'react-bootstrap/Button'\n\nclass ShowQues extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      question: null\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n    console.log(match)\n\n    showQues(match.params.id, user)\n      .then((res) => this.setState({ question: res.data.question }))\n      .then(() => {\n        msgAlert({\n          heading: 'Successfully Showing Question',\n          message: 'WooHoo!',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Show Question Failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  handleDelete = () => {\n    const { match, user, msgAlert, history } = this.props\n\n    deleteQues(match.params.id, user)\n      .then(() => history.push('/questions/'))\n      .then(() => {\n        msgAlert({\n          heading: 'Successfully Deleted Question',\n          message: 'WooHoo!',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Delete Question Failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { question } = this.state\n\n    if (question === null) {\n      return 'Loading...'\n    }\n\n    const { title, topic, description, season, episode, owner } = this.state.question\n    const { user, match, history } = this.props\n    return (\n      <div className='box2'>\n        <h3>{title}: Season:{season} Episode:{episode}</h3>\n        <h4>{topic}</h4>\n        <p>{description}</p>\n        {user._id === owner && (\n          <>\n            <Button className='upBtn' onClick={() => history.push(`/questions/${match.params.id}/update`)}>\n              Update\n            </Button>\n            <Button className='delBtn' onClick={this.handleDelete}>\n              Delete\n            </Button>\n          </>\n        )}\n        {user._id !== owner && (\n          <>\n            <Button className='ansBtn' onClick={() => history.push(`/questions/${match.params.id}/answers`)}>Answer</Button>\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ShowQues)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { showQues, updateQues } from '../../api/questions'\n\nclass UpdateQues extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      topic: '',\n      description: '',\n      season: '',\n      episode: ''\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n    showQues(match.params.id, user)\n      .then((res) =>\n        this.setState({\n          title: res.data.question.title,\n          topic: res.data.question.topic,\n          description: res.data.question.description,\n          season: res.data.question.season,\n          episode: res.data.episode.date\n        })\n      )\n      .then(() => {\n        msgAlert({\n          heading: 'Preloaded the update',\n          message: 'Worked',\n          variant: 'success'\n        })\n      })\n      .catch(() => {\n        msgAlert({\n          heading: 'Preloading the update failed',\n          message: 'Is not preloading it',\n          variant: 'danger'\n        })\n      })\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, match, history } = this.props\n\n    updateQues(match.params.id, this.state, user)\n      .then(() => history.push(`/questions/${match.params.id}`))\n      .then(() => {\n        msgAlert({\n          heading: 'Question updated',\n          message: 'You\\'ve successfully update your question.',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Question update failed',\n          message: 'Question error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <div className='box'>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId='title'>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='title'\n              value={this.state.title}\n              placeholder='Anime Title'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='topic'>\n            <Form.Label>Topic</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='topic'\n              value={this.state.topic}\n              placeholder='Question Topic'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              required\n              as='textarea'\n              rows={4}\n              name='description'\n              value={this.state.description}\n              placeholder='Expand on your question'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='season'>\n            <Form.Label>Season</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='season'\n              value={this.state.season}\n              placeholder='What season are you up to?'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='episode'>\n            <Form.Label>Episode</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='episode'\n              value={this.state.episode}\n              placeholder='What episode are you up to?'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button className='createBtn' type='submit'>\n            Post\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UpdateQues)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createAns } from '../../api/answers'\n\nclass CreateAns extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      text: '',\n      questionId: this.props.match.params.id\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(this.props)\n    // console.log(this.state.questionId)\n    const { user, msgAlert, history } = this.props\n\n    createAns(this.state, user) // must add question id\n      .then((res) => {\n        console.log(res.data)\n        return res\n      })\n      .then(() => history.push(`/questions/${this.state.questionId}`))\n      .then(() => {\n        msgAlert({\n          heading: 'Answer Posted!',\n          message: 'Now, just wait on someone to answer.',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Error Posting Answer!',\n          message: 'Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <div className='box3'>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId='text'>\n            <Form.Label>Answer</Form.Label>\n            <Form.Control\n              required\n              as='textarea'\n              rows={5}\n              name='text'\n              value={this.state.text}\n              placeholder='Your Answer'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button className='createBtn' type='submit'>\n            Post\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CreateAns)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createAns = (data, user) => {\n  console.log(data)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/answers',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      answer: {\n        text: data.text,\n        questionId: data.questionId\n      }\n    }\n  })\n}\n\nexport const updateAns = (id, data, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/answers/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      answer: {\n        text: data.text\n      }\n    }\n  })\n}\n\nexport const deleteAns = (id, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/answers/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport CreateQues from './components/Questions/CreateQues'\nimport IndexQues from './components/Questions/IndexQues'\nimport IndexAllQues from './components/Questions/IndexAllQues'\nimport ShowQues from './components/Questions/ShowQues'\nimport UpdateQues from './components/Questions/UpdateQues'\nimport CreateAns from './components/Answers/CreateAns'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-question'\n            render={() => (\n              <CreateQues msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/questions/:id/update'\n            render={() => (\n              <UpdateQues msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact path='/questions'\n            render={() => (\n              <IndexQues msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact path='/all'\n            render={() => (\n              <IndexAllQues msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact path='/questions/:id'\n            render={() => (\n              <ShowQues msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/questions/:id/answers'\n            render={() => (\n              <CreateAns msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}